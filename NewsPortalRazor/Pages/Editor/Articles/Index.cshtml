@page
@using X.PagedList.Mvc.Core
@model NewsPortalRazor.Pages.Admin.Articles.IndexModel

@{
    ViewData["Title"] = "My Articles";
}

<h2 class="mb-4"><i class="fas fa-newspaper"></i> My Articles</h2>

<!-- Card chứa form tìm kiếm & bộ lọc -->
<div class="card shadow-lg p-4 mb-4">
    <form method="get">
        <div class="row g-3 align-items-end">
            <div class="col-md-4">
                <label class="form-label fw-bold"><i class="fas fa-search"></i> Search</label>
                <input type="text" name="SearchTerm" class="form-control" placeholder="Search by Title..." value="@Model.SearchTerm" />
            </div>
            <div class="col-md-3">
                <label class="form-label fw-bold"><i class="fas fa-folder"></i> Category</label>
                <select name="CategoryFilter" class="form-select">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.CategoryId" selected="@(Model.CategoryFilter.ToString() == category.CategoryId.ToString() ? "selected" : null)">@category.Name</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label fw-bold"><i class="fas fa-toggle-on"></i> Status</label>
                <select name="StatusFilter" class="form-select">
                    <option value="">All Status</option>
                    <option value="Draft" selected="@(Model.StatusFilter == "Draft" ? "selected" : null)">Draft</option>
                    <option value="Pending Approval" selected="@(Model.StatusFilter == "Pending Approval" ? "selected" : null)">Pending Approval</option>
                    <option value="Published" selected="@(Model.StatusFilter == "Published" ? "selected" : null)">Published</option>
                    <option value="Archived" selected="@(Model.StatusFilter == "Archived" ? "selected" : null)">Archived</option>
                </select>
            </div>
            <div class="col-md-2 d-flex">
                <button type="submit" class="btn btn-primary w-100 me-2"><i class="fas fa-filter"></i> Filter</button>
                <a href="@Url.Page("./Index")" class="btn btn-secondary w-100"><i class="fas fa-sync-alt"></i> Reset</a>
            </div>
        </div>
    </form>
</div>

<!-- Button tạo bài viết -->
<div class="d-flex justify-content-end mb-3">
    <a asp-page="Create" class="btn btn-success"><i class="fas fa-plus"></i> Create New Article</a>
</div>

@if (Model.Articles.Any())
{
    <div class="card shadow-lg">
        <div class="card-body p-0">
            <table class="table table-striped table-hover align-middle mb-0">
                <thead class="table-dark">
                    <tr>
                        <th>Title</th>
                        <th>Category</th>
                        <th>Tags</th>
                        <th>Status</th>
                        <th>Created At</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Articles)
                    {
                        <tr>
                            <td style="max-width: 250px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;" title="@item.Title">
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Category.Name)</td>
                            <td>
                                @if (item.Tags.Any())
                                {
                                    var tagList = item.Tags.Select(t => t.Name).ToList();
                                    var displayedTags = tagList.Take(3).ToList();
                                    var remainingTags = tagList.Skip(3).ToList();

                                    <div>
                                        @foreach (var tag in displayedTags)
                                        {
                                            <span class="badge bg-primary me-1">@tag</span>
                                        }
                                        @if (remainingTags.Any())
                                        {
                                            <span class="badge bg-secondary" data-bs-toggle="tooltip" title="@string.Join(", ", remainingTags)">+@remainingTags.Count more</span>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <span class="text-muted">No tags</span>
                                }
                            </td>
                            <td>
                                <span class="badge @(item.Status == "Published" ? "bg-success" : item.Status == "Pending Approval" ? "bg-warning text-dark" : item.Status == "Draft" ? "bg-secondary" : "bg-danger") p-2">
                                    <i class="@(item.Status == "Published" ? "fas fa-check-circle" : item.Status == "Pending Approval" ? "fas fa-clock" : item.Status == "Draft" ? "fas fa-edit" : "fas fa-archive")"></i>
                                    @item.Status
                                </span>
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                            <td class="text-center">
                                <a asp-page="./Edit" asp-route-id="@item.ArticleId" class="btn btn-sm btn-primary"><i class="fas fa-edit"></i> Edit</a>
                                <a asp-page="./Details" asp-route-id="@item.ArticleId" class="btn btn-sm btn-info"><i class="fas fa-eye"></i> Details</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Phân trang -->
    <nav class="mt-3 d-flex justify-content-center">
        @Html.PagedListPager(Model.Articles, page => Url.Page("./Index", new { PageNumber = page, SearchTerm = Model.SearchTerm, CategoryFilter = Model.CategoryFilter, StatusFilter = Model.StatusFilter }),
                new PagedListRenderOptions { LiElementClasses = new[] { "page-item" }, PageClasses = new[] { "page-link" } })
    </nav>
}
else
{
    <div class="alert alert-warning text-center" role="alert">
        <i class="fas fa-exclamation-circle"></i> No articles found.
    </div>
}