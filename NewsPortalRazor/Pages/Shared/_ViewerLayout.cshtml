@using System.Security.Claims
@using Services
@inject ICategoryService CategoryService
@inject IArticleService ArticleService

@{
    var categories = await CategoryService.GetActiveCategories();
    var latestArticles = await ArticleService.GetLatestArticles(5); // Lấy 5 bài mới nhất
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - NewsPortal</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/NewsPortalRazor.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark shadow">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-page="/Index">
                    <i class="fa-solid fa-newspaper"></i> NewsPortalRazor
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-page="/Index">
                                <i class="fa-solid fa-house"></i> Home
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-page="/Viewer/Index">
                                <i class="fa-solid fa-newspaper"></i> All news
                            </a>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="categoriesDropdown" role="button" data-bs-toggle="dropdown">
                                <i class="fa-solid fa-list"></i> Categories
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="categoriesDropdown">
                                <li>
                                    <a class="dropdown-item category-filter" data-category-id="">
                                        <i class="fa-solid fa-folder-open"></i> All Categories
                                    </a>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                @foreach (var category in categories.Where(c => c.ParentCategoryId == null))
                                {
                                    var subCategories = categories.Where(sc => sc.ParentCategoryId == category.CategoryId).ToList();
                                    if (subCategories.Any())
                                    {
                                        <li class="dropdown-submenu">
                                            <a class="dropdown-item category-filter" data-category-id="@category.CategoryId">
                                                <i class="fa-solid fa-folder"></i> @category.Name
                                            </a>
                                            <ul class="dropdown-menu">
                                                @foreach (var subCategory in subCategories)
                                                {
                                                    <li>
                                                        <a class="dropdown-item category-filter" data-category-id="@subCategory.CategoryId">
                                                            <i class="fa-solid fa-folder-open"></i> @subCategory.Name
                                                        </a>
                                                    </li>
                                                }
                                            </ul>
                                        </li>
                                    }
                                    else
                                    {
                                        <li>
                                            <a class="dropdown-item category-filter" data-category-id="@category.CategoryId">
                                                <i class="fa-solid fa-file"></i> @category.Name
                                            </a>
                                        </li>
                                    }
                                }
                            </ul>
                        </li>
                    </ul>

                    <!-- Notification Dropdown -->
                    <div class="dropdown me-3">
                        <a class="nav-link text-white dropdown-toggle" href="#" id="notificationDropdown" role="button" data-bs-toggle="dropdown">
                            <i class="fa-solid fa-bell"></i> <span class="badge bg-danger" id="notificationCount">0</span>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="notificationDropdown" id="notificationList">
                            <li><a class="dropdown-item text-center" href="/Viewer/Notifications">View All</a></li>
                        </ul>
                    </div>


                    @if (User.Identity.IsAuthenticated)
                    {
                        var userRole = User.FindFirstValue(ClaimTypes.Role);
                        var userName = User.FindFirstValue(ClaimTypes.Name);
                        <div class="d-flex align-items-center">
                            <span class="text-white me-2"><i class="fa-solid fa-user"></i> @userName - @userRole</span>
                            <form method="post" asp-page="/Logout">
                                <button class="btn btn-danger"><i class="fas fa-sign-out-alt"></i> Logout</button>
                            </form>
                        </div>
                    }
                    else
                    {
                        <a class="btn btn-primary px-3" asp-page="/Login">
                            <i class="fas fa-sign-in-alt"></i> Login
                        </a>
                    }
                </div>
            </div>
        </nav>
    </header>
    <div class="container mt-3">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>
    <footer class="footer mt-3">
        <div class="container text-center">
            <p>&copy; @DateTime.Now.Year NewsPortalRazor - All rights reserved.</p>
        </div>
    </footer>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/microsoft-signalr/signalr.js"></script>

    <script>
        const userId = "@User.FindFirstValue(System.Security.Claims.ClaimTypes.NameIdentifier)"; // Chuyển thành chuỗi hợp lệ

        const connection = new signalR.HubConnectionBuilder()
            .withUrl(`/notificationHub?userId=${userId}`)
            .build();

        connection.start().catch(err => console.error(err));

        connection.on("ReceiveNotification", function (message) {
            console.log("Received notification: ", message);
            const list = document.getElementById("notificationList");
            const newItem = document.createElement("li");
            newItem.innerHTML = `<a class="dropdown-item">${message}</a>`;
            list.prepend(newItem);

            let countText = document.getElementById("notificationCount").innerText.trim();
            let count = isNaN(parseInt(countText)) ? 0 : parseInt(countText);
            document.getElementById("notificationCount").innerText = count + 1;

            toastr.info(message);
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".category-filter").forEach(item => {
                item.addEventListener("click", function (e) {
                    e.preventDefault();
                    let categoryId = this.getAttribute("data-category-id");
                    let url = new URL(window.location.origin + "/Viewer/Index");
                    if (categoryId) {
                        url.searchParams.set("Filter.SelectedCategoryId", categoryId);
                    } else {
                        url.searchParams.delete("Filter.SelectedCategoryId");
                    }
                    window.location.href = url.toString();
                });
            });
        });

        $(document).ready(function () {
            let page = 1;
            $("#loadMoreNotifications").on("click", function () {
                page++;
                $.get("/api/articles/latest", { page: page }, function (data) {
                    if (data.length > 0) {
                        data.forEach(article => {
                            $("#notificationList").prepend(
                                `<li><a class='dropdown-item' href='/Viewer/ArticleDetail?id=${article.articleId}'>
                                            <strong>${article.title}</strong> - <small>${article.createdAt}</small>
                                        </a></li>`
                            );
                        });
                    } else {
                        $("#loadMoreNotifications").hide();
                    }
                });
            });
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
